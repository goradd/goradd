package control

func (b *Navbar) DrawTemplate(ctx context.Context, _w io.Writer) (err error) {
{{
    <div class="{{= string(b.containerClass) }}">
}}
    {{e b.drawToggleAndBrand(ctx, _w) }}

{{
        <div class="collapse navbar-collapse" id="{{= b.ID() }}_collapse">
            {{if b.brandLocation == NavbarCollapsedBrandHidden}}{{g b.drawBrand(ctx, _w) }}{{if}}
            {{g b.DrawChildren(ctx, _w) }}
        </div>
    </div>
}}
    return
}

func (b *Navbar) drawToggleButton(ctx context.Context, _w io.Writer) (err error) {
{{
  <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#{{= b.ID() }}_collapse" aria-controls="{{= b.ID() }}_collapse" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
}}
    return
}

func (b *Navbar) drawBrand(ctx context.Context, _w io.Writer) (err error) {
    if b.Text() != "" {
        if b.brandAnchor == "" {
            {{
                <span class="navbar-brand">{{g b.DrawText(ctx, _w) }}</span>
            }}
        } else {
             {{
                 <a class="navbar-brand" href="{{= b.brandAnchor}}">{{g b.DrawText(ctx, _w) }}</a>
             }}
        }
    } else {    // draw a blank brand so toggler placement still works
     {{
 		<a class="navbar-brand" href="#"> </a>
     }}
    }
    return
}

func (b *Navbar) drawToggleAndBrand(ctx context.Context, _w io.Writer) (err error) {
    switch b.brandLocation {
    case NavbarCollapsedBrandLeft:
        {{e b.drawBrand(ctx, _w) }}
        {{e b.drawToggleButton(ctx, _w) }}
    case NavbarCollapsedBrandRight:
        {{e b.drawToggleButton(ctx, _w) }}
        {{e b.drawBrand(ctx, _w) }}
    case NavbarCollapsedBrandHidden:
         {{e b.drawToggleButton(ctx, _w) }}
    }
    return
}