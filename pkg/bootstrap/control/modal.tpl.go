//** This file was code generated by GoT. DO NOT EDIT. ***

package control

import (
	"context"
	"html"
	"io"
)

func (d *Modal) DrawTemplate(ctx context.Context, _w io.Writer) (err error) {

	if _, err = io.WriteString(_w, `    <div class="modal-dialog" role="document">
        <div class="modal-content">
`); err != nil {
		return
	}

	d.titleBar.AddClass("modal-header")
	d.titleBar.Draw(ctx, _w)

	if _, err = io.WriteString(_w, `            <div class="modal-body">
`); err != nil {
		return
	}

	l := len(d.Children())
	if l > 2 {
		for _, child := range d.Children() {
			if child.ID() != d.titleBar.ID() && child.ID() != d.buttonBar.ID() {
				child.Draw(ctx, _w)
			}
		}
	} else {

		if _, err = io.WriteString(_w, `<p>`); err != nil {
			return
		}

		if _, err = io.WriteString(_w, html.EscapeString(d.Text())); err != nil {
			return
		}

		if _, err = io.WriteString(_w, ` </p>`); err != nil {
			return
		}

	}

	if _, err = io.WriteString(_w, `
            </div>
`); err != nil {
		return
	}

	d.buttonBar.AddClass("modal-footer")
	d.buttonBar.Draw(ctx, _w)

	if _, err = io.WriteString(_w, `        </div>
    </div>

`); err != nil {
		return
	}

	return
}

func (d *TitleBar) DrawTemplate(ctx context.Context, _w io.Writer) (err error) {
	if d.Title != "" {

		if _, err = io.WriteString(_w, `     <h5 id="`); err != nil {
			return
		}

		if _, err = io.WriteString(_w, d.Parent().ID()); err != nil {
			return
		}

		if _, err = io.WriteString(_w, `_title" class="modal-title">`); err != nil {
			return
		}

		if _, err = io.WriteString(_w, d.Title); err != nil {
			return
		}

		if _, err = io.WriteString(_w, `</h5>
`); err != nil {
			return
		}

	}
	if d.HasCloseBox {

		if _, err = io.WriteString(_w, `    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
`); err != nil {
			return
		}

	}
	return
}
