//** This file was code generated by GoT. DO NOT EDIT. ***

package control

import (
	"context"
	"io"
)

func (t *Tabs) DrawTemplate(ctx context.Context, _w io.Writer) (err error) {
	var children = t.Children()

	if (children != nil && len(children) > 0) &&
		(t.selectedID == "" || t.Child(t.selectedID) == nil) {
		t.selectedID = children[0].ID() // select first item if nothing is selected
	}
	bs := t.tabStyle
	ul := t.tabStyle
	if t.tabStyle == TabStyleTabs || t.tabStyle == TabStylePills {
		ul = t.tabStyle + "s"
	}
	if t.tabStyle == TabStyleUnderline {
		bs = "tab"
	}

	if _, err = io.WriteString(_w, `
<ul class="nav nav-`); err != nil {
		return
	}

	if _, err = io.WriteString(_w, ul); err != nil {
		return
	}

	if _, err = io.WriteString(_w, `" id="myTab" role="tablist">
`); err != nil {
		return
	}

	for _, child := range children {

		if _, err = io.WriteString(_w, `  <li class="nav-item" role="presentation">
    <a class="nav-link `); err != nil {
			return
		}

		if child.ID() == t.selectedID {

			if _, err = io.WriteString(_w, `active`); err != nil {
				return
			}

		}

		if _, err = io.WriteString(_w, `" id="`); err != nil {
			return
		}

		if _, err = io.WriteString(_w, child.ID()); err != nil {
			return
		}

		if _, err = io.WriteString(_w, `_tab" data-bs-toggle="`); err != nil {
			return
		}

		if _, err = io.WriteString(_w, bs); err != nil {
			return
		}

		if _, err = io.WriteString(_w, `" href="#`); err != nil {
			return
		}

		if _, err = io.WriteString(_w, child.ID()); err != nil {
			return
		}

		if _, err = io.WriteString(_w, `" role="tab" aria-controls="`); err != nil {
			return
		}

		if _, err = io.WriteString(_w, child.ID()); err != nil {
			return
		}

		if _, err = io.WriteString(_w, `" aria-selected="true">`); err != nil {
			return
		}

		if _, err = io.WriteString(_w, child.Text()); err != nil {
			return
		}

		if _, err = io.WriteString(_w, `</a>
  </li>
`); err != nil {
			return
		}

	}

	if _, err = io.WriteString(_w, `</ul>
<div class="tab-content" id="myTabContent">
`); err != nil {
		return
	}

	for _, child := range children {
		child.AddClass("tab-pane")
		if child.ID() == t.selectedID {
			child.AddClass("active")
		}
		child.SetAttribute("role", "tabpanel")
		child.SetAttribute("aria-labelledby", child.ID()+"_tab")
		child.Draw(ctx, _w)
	}

	if _, err = io.WriteString(_w, `</div>

`); err != nil {
		return
	}

	return
}
