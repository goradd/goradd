//** This file was code generated by GoT. DO NOT EDIT. ***


package page

import (
	"context"
	"fmt"
	"html"
	"io"
	"strings"
)

// The DebugErrorPageTmpl writes a debug error page to the html output so that it will display the error in the
// browser, possibly as a popup. Do not use this on the release server, as it may expose details of your application
// that you do not want exposed.
func DebugErrorPageTmpl(ctx context.Context, partialHtml []byte, inErr *Error, _w io.Writer) (err error) {

if _,err = io.WriteString(_w, `<h1 id="err-title">Error</h1>
`); err != nil {return}

    items := strings.Split(inErr.Error(), "\n")
    errTitle := items[0]
    var errDesc string
    if len(items) > 1 {
        errDesc = strings.Join(items[1:], "<br />")
    }

if _,err = io.WriteString(_w, `<h2>`); err != nil {return}

 if _,err = io.WriteString(_w, errTitle); err != nil {return}

if _,err = io.WriteString(_w, `</h2>
`); err != nil {return}

if errDesc != "" {

if _,err = io.WriteString(_w, `<p>`); err != nil {return}

 if _,err = io.WriteString(_w, errDesc); err != nil {return}

if _,err = io.WriteString(_w, `</p>`); err != nil {return}

}

if _,err = io.WriteString(_w, `
<h3>Call Path</h3>
<p>
`); err != nil {return}

for _,stack := range inErr.Stack {

if _,err = io.WriteString(_w, `    `); err != nil {return}

 if _,err = io.WriteString(_w, fmt.Sprintf("%s line %d in %s", stack.File, stack.Line, stack.Func)); err != nil {return}

if _,err = io.WriteString(_w, ` <br />
`); err != nil {return}

}

if _,err = io.WriteString(_w, `</p>
<h3>Generated Html</h3>
`); err != nil {return}

 if _,err = io.WriteString(_w, strings.Replace(html.EscapeString(string(partialHtml)), "\n", "<br>\n", -1)); err != nil {return}

if _,err = io.WriteString(_w, `


`); err != nil {return}

	return
}