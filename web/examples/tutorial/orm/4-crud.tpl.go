//** This file was code generated by GoT. DO NOT EDIT. ***

package orm

import (
	"context"
	"io"
)

func (ctrl *CrudPanel) DrawTemplate(ctx context.Context, _w io.Writer) (err error) {

	if _, err = io.WriteString(_w, `<h1>Creating, Modifying and Deleting Database Objects</h1>

<h2>Creating a Database Obect</h2>

<p>
`); err != nil {
		return
	}

	if _, err = io.WriteString(_w, `Each object generated has a corresponding New function which creates a new, empty database object.
If you have specified a default value for any of the object&#39;s fields in the database, the new object will start with that value.
`); err != nil {
		return
	}

	if _, err = io.WriteString(_w, `</p>
<p>
Modify fields in each object by using the corresponding Set functions, and then call Save() to save the object.
Once you save the object, it will be assigned a unique ID that you can use to identify the object in the database
and create links to that particular object.
</p>
<p>
For example, to create a new Person in the database, you could do the following:
</p>
<pre><code>
    person := model.NewPerson()
    person.SetFirstName('Mike')
    person.SetLastName('Easter')
    person.Save()
</code></pre>
<h2>Modifying a Database Object</h2>
<p>Any of the objects you get from the database can be modified by calling Set functions, and then calling Save().
For example: </p>
<pre><code>
    project := model.LoadProjectByNum(1)
    project.SetName('New Project')
    project.Save()
</code></pre>
<h2>Deleting a Database Object</h2>
<p>To delete an object from the database, just call Delete on it.</p>
<pre><code>
    project := model.LoadProjectByNum(1)
    project.Delete()
</code></pre>

`); err != nil {
		return
	}

	return
}
