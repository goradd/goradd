//** This file was code generated by GoT. DO NOT EDIT. ***

package controls

import (
	"context"
	"io"
)

func (ctrl *WatcherPanel) DrawTemplate(ctx context.Context, _w io.Writer) (err error) {

	if _, err = io.WriteString(_w, `<h1>Watching Database Changes</h1>
<p>
You can tell any control to redraw itself when a portion of the database changes. Usually, you will use this with
a list of items in the database so that if you or someone else edits an item in the list, you can see the changes in
real time. You can also
</p>
<h2>Terminology</h2>
`); err != nil {
		return
	}

	if _, err = io.WriteString(_w, `<p>Different databases refer to data objects using different words, but the concepts are the same. For example,<br>
in a SQL database a collection of objects corresponds to a &#34;table&#34; and a member variable in an object corresponds to a &#34;field&#34;.<br>
Each object in a table has a member variable which contains a unique key to identify that object, called the &#34;primary key&#34;.<br>
Relationships between two tables are defined using a &#34;foreign key&#34;, which is essentially just a member variable in one<br>
object that contains a copy of the primary key of a different object.<br>
</p>
`); err != nil {
		return
	}

	if _, err = io.WriteString(_w, `<p>
`); err != nil {
		return
	}

	if _, err = io.WriteString(_w, `<p>For example, if a &#34;project&#34; object wanted easy access to the &#34;person&#34; object that is the manager of the project,<br>
the &#34;project&#34; object could have a member called &#34;manager_id&#34;, which is the primary key of the &#34;person&#34; object<br>
that contains information on the project&#39;s manager. Note that this sets up a one-to-many relationship, because<br>
the project points to only one manager, but a manager might be managing multiple projects, and so will have multiple projects<br>
pointing back to the manager.</p>
<p>This tutorial will teach you how to set up database relationships, and traverse them to create and retrieve the data you want.</p>
<p>If you have not yet set up the example database, do that now using the following steps.<br>
</p>
`); err != nil {
		return
	}

	if _, err = io.WriteString(_w, `
`); err != nil {
		return
	}

	return
}
