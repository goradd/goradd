//dirty.tmpl
{{

// resetDirtyStatus resets the dirty status of every field in the object.
func (o *{{privateName}}Base) resetDirtyStatus() {
{{for _,col := range t.Columns }}
	o.{{= col.ModelName() }}IsDirty = false
{{for}}
{{for _,ref := range t.ReverseReferences }}
	o.{{= oRef(ref) }}IsDirty = false
{{for}}
{{for _,ref := range t.ManyManyReferences }}
	o.{{= oRef(ref) }}IsDirty = false
{{for}}

}

// IsDirty returns true if the object has been changed since it was read from the database.
func (o *{{privateName}}Base) IsDirty() (dirty bool) {
    dirty = {{join t.Columns, "|| \n"}}o.{{= _j.ModelName() }}IsDirty {{if _j.ReferenceFunction() != "" && !_j.IsEnum() }} ||
	    (o.{{= oRef(_j) }} != nil && o.{{= oRef(_j) }}.IsDirty()) {{if}}{{join}}

{{if len(t.ReverseReferences) > 0}}
	dirty = dirty ||
	    {{join t.ReverseReferences, "|| \n"}}o.{{= oRef(_j) }}IsDirty{{join}}

{{for _,ref := range t.ReverseReferences}}
{{if ref.IsUnique()}}
    dirty = dirty || (o.{{= oRef(ref) }} != nil && o.{{= oRef(ref) }}.IsDirty())
{{else}}
    for _, obj := range o.{{= oRef(ref) }} {
        dirty = dirty || obj.IsDirty()
    }
{{if}}
{{for}}
{{if}}

{{if len(t.ManyManyReferences) > 0}}
	dirty = dirty ||
	    {{join t.ManyManyReferences, "|| \n"}}o.{{= oRef(_j) }}IsDirty{{join}}

{{for _,ref := range t.ManyManyReferences}}
{{if !ref.IsEnumAssociation }}
    for _, obj := range o.{{= oRef(ref) }} {
        dirty = dirty || obj.IsDirty()
    }
{{if}}
{{for}}
{{if}}

    return
}

}}
