package template

import (
	"github.com/goradd/goradd/codegen/generator"
	"github.com/goradd/goradd/pkg/config"
	"io"
	"github.com/goradd/goradd/pkg/orm/db"
	strings2 "github.com/goradd/goradd/pkg/strings"
	"fmt"
)

func init() {
	t := EnumTableNodeTemplate {
		generator.Template {
			Overwrite: true,
		},
	}
	generator.AddEnumTableTemplate(&t)
}

type EnumTableNodeTemplate struct {
	generator.Template
}

func (n *EnumTableNodeTemplate) FileName(key string, tt generator.EnumTableType) string {
    var targetDir string
    if generator.BuildingExamples {
        targetDir = config.GoraddDir() + "/web/examples/gen"
    } else {
        targetDir = config.ProjectDir() + "/gen"
    }
	return targetDir + "/" + key + "/model/node/" + tt.FileName() + ".go"
}

func (n *EnumTableNodeTemplate) GenerateEnumTable(codegen generator.CodeGenerator, dd *db.Model, tt generator.EnumTableType, _w io.Writer) (err error) {
	{{: "enumTable/enumTableNode.tmpl" }}
	return
}

func (n *EnumTableNodeTemplate) Overwrite() bool {
	return n.Template.Overwrite
}
